name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published
env:
  java_version: '15.x'
  flutter_version: '2.2.3'
jobs:
  test:
    runs-on: macos-latest
    timeout-minutes: 10
    env:
      BACKEND_ORIGIN: https://example.com
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java_version }}
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.flutter_version }}
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: flutter analyze
      - run: flutter format . --set-exit-if-changed
      - run: flutter test --dart-define=BACKEND_ORIGIN=$BACKEND_ORIGIN
      - run: xcrun xctrace list devices
      - run: xcrun simctl boot "7337B6F6-C353-4581-859E-CE00188F8BCE"
      - run: flutter test --dart-define=BACKEND_ORIGIN=$BACKEND_ORIGIN integration_test
  deploy-staging:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java_version }}
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.flutter_version }}
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: flutter build apk --dart-define=BACKEND_ORIGIN=$BACKEND_ORIGIN
        env:
          BACKEND_ORIGIN: ${{ secrets.BACKEND_ORIGIN }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14.15.5
      - run: npm update -g
      - run: npm install -g firebase-tools
      - run: firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk --app $FIREBASE_APP --token $FIREBASE_TOKEN
        env:
          FIREBASE_APP: ${{ secrets.FIREBASE_APP }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  deploy-production:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - run: echo TODO
